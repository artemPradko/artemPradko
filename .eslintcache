[{"C:\\ArtemStudy\\Trello\\artem-react-app\\src\\index.js":"1","C:\\ArtemStudy\\Trello\\artem-react-app\\src\\App\\App.js":"2","C:\\ArtemStudy\\Trello\\artem-react-app\\src\\pages\\general\\general.js":"3","C:\\ArtemStudy\\Trello\\artem-react-app\\src\\pages\\fourPage\\fourPage.js":"4","C:\\ArtemStudy\\Trello\\artem-react-app\\src\\pages\\firstPage\\firstPage.js":"5","C:\\ArtemStudy\\Trello\\artem-react-app\\src\\pages\\sevenPage\\sevenPage.js":"6","C:\\ArtemStudy\\Trello\\artem-react-app\\src\\pages\\secondPage\\secondPage.js":"7","C:\\ArtemStudy\\Trello\\artem-react-app\\src\\pages\\fivePage\\fivePage.js":"8","C:\\ArtemStudy\\Trello\\artem-react-app\\src\\pages\\sixPage\\sixPage.js":"9","C:\\ArtemStudy\\Trello\\artem-react-app\\src\\pages\\ninePage\\ninePage.js":"10","C:\\ArtemStudy\\Trello\\artem-react-app\\src\\pages\\eightPage\\eightPage.js":"11","C:\\ArtemStudy\\Trello\\artem-react-app\\src\\pages\\tenPage\\tenPage.js":"12","C:\\ArtemStudy\\Trello\\artem-react-app\\src\\pages\\testInMarch\\testInMarch.js":"13","C:\\ArtemStudy\\Trello\\artem-react-app\\src\\pages\\Test\\Test.js":"14","C:\\ArtemStudy\\Trello\\artem-react-app\\src\\pages\\starWarsStarships\\starWarsStarships.js":"15","C:\\ArtemStudy\\Trello\\artem-react-app\\src\\pages\\starWarsPlanets\\starWarsPlanets.js":"16","C:\\ArtemStudy\\Trello\\artem-react-app\\src\\pages\\testInMay\\testInMay.js":"17","C:\\ArtemStudy\\Trello\\artem-react-app\\src\\pages\\testInJune\\testInJune.js":"18","C:\\ArtemStudy\\Trello\\artem-react-app\\src\\pages\\testInApril\\testinApril.js":"19","C:\\ArtemStudy\\Trello\\artem-react-app\\src\\pages\\threePage\\threePage.js":"20","C:\\ArtemStudy\\Trello\\artem-react-app\\src\\pages\\calculation\\calculation.js":"21","C:\\ArtemStudy\\Trello\\artem-react-app\\src\\utils\\helpers.js":"22","C:\\ArtemStudy\\Trello\\artem-react-app\\src\\components\\Banner\\Banner.js":"23","C:\\ArtemStudy\\Trello\\artem-react-app\\src\\components\\ContactAs\\ContactAs.js":"24","C:\\ArtemStudy\\Trello\\artem-react-app\\src\\components\\BigButton\\BigButton.js":"25","C:\\ArtemStudy\\Trello\\artem-react-app\\src\\components\\Header\\Header.js":"26","C:\\ArtemStudy\\Trello\\artem-react-app\\src\\components\\AboutUs\\AboutUs.js":"27","C:\\ArtemStudy\\Trello\\artem-react-app\\src\\pages\\toDoList\\toDoList.js":"28"},{"size":436,"mtime":1625215172758,"results":"29","hashOfConfig":"30"},{"size":2493,"mtime":1631194980564,"results":"31","hashOfConfig":"30"},{"size":870,"mtime":1610280771289,"results":"32","hashOfConfig":"30"},{"size":685,"mtime":1625214710141,"results":"33","hashOfConfig":"30"},{"size":608,"mtime":1625214756606,"results":"34","hashOfConfig":"30"},{"size":163,"mtime":1610804213370,"results":"35","hashOfConfig":"30"},{"size":772,"mtime":1610891054534,"results":"36","hashOfConfig":"30"},{"size":1167,"mtime":1625214731908,"results":"37","hashOfConfig":"30"},{"size":1209,"mtime":1610898134376,"results":"38","hashOfConfig":"30"},{"size":566,"mtime":1625214661819,"results":"39","hashOfConfig":"30"},{"size":567,"mtime":1625214873723,"results":"40","hashOfConfig":"30"},{"size":469,"mtime":1625295967937,"results":"41","hashOfConfig":"30"},{"size":3612,"mtime":1625295215884,"results":"42","hashOfConfig":"30"},{"size":2881,"mtime":1625294956561,"results":"43","hashOfConfig":"30"},{"size":3669,"mtime":1627231899613,"results":"44","hashOfConfig":"30"},{"size":16126,"mtime":1630770935862,"results":"45","hashOfConfig":"30"},{"size":2496,"mtime":1625294064765,"results":"46","hashOfConfig":"30"},{"size":2283,"mtime":1625327716646,"results":"47","hashOfConfig":"30"},{"size":2757,"mtime":1625296107854,"results":"48","hashOfConfig":"30"},{"size":489,"mtime":1625214183229,"results":"49","hashOfConfig":"30"},{"size":6194,"mtime":1625295906006,"results":"50","hashOfConfig":"30"},{"size":1563,"mtime":1625295832461,"results":"51","hashOfConfig":"30"},{"size":1434,"mtime":1610265982325,"results":"52","hashOfConfig":"30"},{"size":1922,"mtime":1610281677770,"results":"53","hashOfConfig":"30"},{"size":2314,"mtime":1625214971193,"results":"54","hashOfConfig":"30"},{"size":2291,"mtime":1626081168715,"results":"55","hashOfConfig":"30"},{"size":2801,"mtime":1610279488686,"results":"56","hashOfConfig":"30"},{"size":1257,"mtime":1634826374174,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"127liif",{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\ArtemStudy\\Trello\\artem-react-app\\src\\index.js",[],["120","121","122","123","124"],"C:\\ArtemStudy\\Trello\\artem-react-app\\src\\App\\App.js",[],"C:\\ArtemStudy\\Trello\\artem-react-app\\src\\pages\\general\\general.js",[],"C:\\ArtemStudy\\Trello\\artem-react-app\\src\\pages\\fourPage\\fourPage.js",[],"C:\\ArtemStudy\\Trello\\artem-react-app\\src\\pages\\firstPage\\firstPage.js",[],"C:\\ArtemStudy\\Trello\\artem-react-app\\src\\pages\\sevenPage\\sevenPage.js",[],"C:\\ArtemStudy\\Trello\\artem-react-app\\src\\pages\\secondPage\\secondPage.js",[],"C:\\ArtemStudy\\Trello\\artem-react-app\\src\\pages\\fivePage\\fivePage.js",[],"C:\\ArtemStudy\\Trello\\artem-react-app\\src\\pages\\sixPage\\sixPage.js",[],"C:\\ArtemStudy\\Trello\\artem-react-app\\src\\pages\\ninePage\\ninePage.js",[],"C:\\ArtemStudy\\Trello\\artem-react-app\\src\\pages\\eightPage\\eightPage.js",[],"C:\\ArtemStudy\\Trello\\artem-react-app\\src\\pages\\tenPage\\tenPage.js",[],"C:\\ArtemStudy\\Trello\\artem-react-app\\src\\pages\\testInMarch\\testInMarch.js",["125","126","127","128","129","130","131","132","133","134"],"import React, { useCallBack } from 'react';\r\n\r\nfunction TestInMarch() {\r\n  const test = useCallBack(() => {\r\n    const testData = {\r\n      firstName: 'Max',\r\n      lastName: 'Logvyniuk',\r\n      // eslint-disable-next-line no-magic-numbers\r\n      number: 100 * Math.floor(Math.random() * (9 - 1)) + 1,\r\n    };\r\n\r\n    const userData = {\r\n      userId: 1,\r\n      id: 1,\r\n      title: 'delectus aut autem',\r\n      completed: false,\r\n    };\r\n\r\n    const users = [\r\n      {\r\n        id: 1,\r\n        firstName: 'Jeanette',\r\n        lastName: 'Penddreth',\r\n        email: 'jpenddreth0@census.gov',\r\n        gender: 'Female',\r\n        ip_address: '26.58.193.2',\r\n      },\r\n      {\r\n        id: 2,\r\n        firstName: 'Giavani',\r\n        lastName: 'Frediani',\r\n        email: 'gfrediani1@senate.gov',\r\n        gender: 'Male',\r\n        ip_address: '229.179.4.212',\r\n      },\r\n      {\r\n        id: 3,\r\n        firstName: 'Noell',\r\n        lastName: 'Bea',\r\n        email: 'nbea2@imageshack.us',\r\n        gender: 'Female',\r\n        ip_address: '180.66.162.255',\r\n      },\r\n      {\r\n        id: 4,\r\n        firstName: 'Willard',\r\n        lastName: 'Valek',\r\n        email: 'wvalek3@vk.com',\r\n        gender: 'Male',\r\n        ip_address: '67.76.188.26',\r\n      },\r\n    ];\r\n\r\n    const allUserData = { ...testData, ...userData };\r\n\r\n    console.info('allUserData - ', allUserData);\r\n\r\n    console.info('allUserData keys - ', Object.keys(allUserData));\r\n\r\n    console.info('allUserData values - ', Object.values(allUserData));\r\n\r\n    console.info('allUserData entries - ', Object.entries(allUserData));\r\n\r\n    const result = users.find((item) => item.firstName === 'Giavani');\r\n\r\n    console.info('find -', result);\r\n\r\n    const results = users.filter((item) => item.gender === 'Male');\r\n\r\n    console.info('filter - ', results);\r\n\r\n    const fullname = users.map((item) => {\r\n      const newItem = {\r\n        ...item,\r\n        fullname: `${item.firstName} ${item.lastName}`,\r\n      };\r\n\r\n      return newItem;\r\n    });\r\n\r\n    console.info('map - ', fullname);\r\n\r\n    users.forEach((item) => alert(item.email));\r\n\r\n    // eslint-disable-next-line no-prototype-builtins\r\n    console.info(allUserData?.hasOwnProperty('id'));\r\n\r\n    const newArray = users.map((item) => {\r\n      const testing = {\r\n        ...item,\r\n        createdAt: new Date(),\r\n        ubdatedAt: Date.now(),\r\n      };\r\n\r\n      return testing;\r\n    });\r\n\r\n    newArray.forEach((item) => console.info(item.createdAt));\r\n\r\n    const firstArray = [];\r\n\r\n    firstArray.push(allUserData);\r\n\r\n    const secondArray = newArray.map((item) => {\r\n      const secondtest = {\r\n        ...item,\r\n        description: {\r\n          a: {\r\n            b: [{ c: 'defew', d: '21323' }],\r\n          },\r\n        },\r\n      };\r\n\r\n      return secondtest;\r\n    });\r\n\r\n    console.info('multy data ----', secondArray[1].description.a.b[0]?.d);\r\n\r\n    // function sumTo(n) {\r\n    //   if (n === 1) return 1;\r\n    //   return n + sumTo(n - 1);\r\n    // }\r\n\r\n    // function sumTo(4) {\r\n    //   if (n === 1) return 1;\r\n    //   return 4 + sumTo(3) {\r\n    //                if (n === 1) return 1;\r\n    //                 return 3 + sumTo(2) {\r\n    //                   if (n === 1) return 1;\r\n    //                   return 2 + sumTo(1) {\r\n    //                                 if (1 === 1) return 1;\r\n    //                               };\r\n    //                 };\r\n    //               };\r\n    // }\r\n\r\n    // alert( sumTo(100) );\r\n    return true;\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={test}>Submit</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TestInMarch;\r\n","C:\\ArtemStudy\\Trello\\artem-react-app\\src\\pages\\Test\\Test.js",["135","136"],"import React, { useCallback, useState } from 'react';\r\n\r\nfunction Test() {\r\n  const inichial = {\r\n    value1: null,\r\n    value2: null,\r\n    user: null,\r\n    say: null,\r\n    results: null,\r\n  };\r\n\r\n  const [count, setCount] = useState(inichial);\r\n\r\n  const calculate = useCallback(() => {\r\n    let result;\r\n\r\n    console.info('calculete', count);\r\n\r\n    if (Number(count.value1) === '8' && Number(count.value2) === '2') {\r\n      result = count.value1 / count.value2;\r\n    }\r\n    // eslint-disable-next-line no-magic-numbers\r\n    if (count.value1 === 45 && count.value2 === 27) {\r\n      result = count.value1 - count.value2;\r\n    }\r\n    // eslint-disable-next-line no-magic-numbers\r\n    if (count.value1 === 4 && count.value2 === 10) {\r\n      result = count.value1 * count.value2;\r\n    } else {\r\n      // eslint-disable-next-line no-magic-numbers\r\n      result = 987;\r\n    }\r\n\r\n    setCount((prevState) => {\r\n      const changedState = {\r\n        ...prevState,\r\n        results: result,\r\n      };\r\n      return changedState;\r\n    });\r\n  }, [count]);\r\n\r\n  const onChangeData = useCallback((event) => {\r\n    console.info(event);\r\n\r\n    // event.target\r\n    const { target } = event;\r\n\r\n    const { name, value } = target;\r\n\r\n    setCount((prevState) => {\r\n      console.info(event);\r\n      const changedState = {\r\n        ...prevState,\r\n        [name]: value,\r\n      };\r\n\r\n      return changedState;\r\n    });\r\n  }, []);\r\n\r\n  const submit = useCallback(() => {\r\n    if (count.user === 'Max') {\r\n      return alert(`${count.user} ${count.say} 'number' ${count.results} `);\r\n    }\r\n    if (count.user === 'Artem') {\r\n      return alert(`${count.user} ${count.say} 'number' ${count.results} `);\r\n    }\r\n\r\n    return console.info(`${count.user} ${count.say} 'number' ${count.results}`);\r\n  }, [count]);\r\n\r\n  // const onChange = useCallback((event) => {\r\n  //   console.info(event);\r\n\r\n  //   setCount((prevState) => {\r\n  //     ...prevState,\r\n  //   },\r\n  // }[])\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <input\r\n          name=\"user\"\r\n          type=\"text\"\r\n          placeholder=\"user\"\r\n          onChange={onChangeData}\r\n        />\r\n        <input\r\n          name=\"say\"\r\n          type=\"text\"\r\n          placeholder=\"say\"\r\n          onChange={onChangeData}\r\n        />\r\n        <input\r\n          name=\"value1\"\r\n          type=\"number\"\r\n          placeholder=\"value1\"\r\n          onChange={onChangeData}\r\n        />\r\n        <input\r\n          name=\"value2\"\r\n          type=\"number\"\r\n          placeholder=\"value2\"\r\n          onChange={onChangeData}\r\n        />\r\n        <div>\r\n          <button type=\"button\" onClick={calculate}>\r\n            Calculate\r\n          </button>\r\n          <div>\r\n            <button type=\"button\" onClick={submit}>\r\n              Submit\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Test;\r\n","C:\\ArtemStudy\\Trello\\artem-react-app\\src\\pages\\starWarsStarships\\starWarsStarships.js",[],"C:\\ArtemStudy\\Trello\\artem-react-app\\src\\pages\\starWarsPlanets\\starWarsPlanets.js",["137","138","139","140"],"import React, {\r\n  useState,\r\n  useCallback,\r\n  useRef,\r\n  useEffect,\r\n  useReducer,\r\n} from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport s from './starWarsPlanet.module.scss';\r\n\r\nconst slides = [\r\n  {\r\n    title: 'Machu Picchu',\r\n    subtitle: 'Peru',\r\n    description: 'Adventure is never far away',\r\n    image:\r\n      'https://images.unsplash.com/photo-1571771019784-3ff35f4f4277?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=800&fit=max&ixid=eyJhcHBfaWQiOjE0NTg5fQ',\r\n  },\r\n  {\r\n    title: 'Chamonix',\r\n    subtitle: 'France',\r\n    description: 'Let your dreams come true',\r\n    image:\r\n      'https://images.unsplash.com/photo-1581836499506-4a660b39478a?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=800&fit=max&ixid=eyJhcHBfaWQiOjE0NTg5fQ',\r\n  },\r\n  {\r\n    title: 'Mimisa Rocks',\r\n    subtitle: 'Australia',\r\n    description: 'A piece of heaven',\r\n    image:\r\n      'https://images.unsplash.com/photo-1566522650166-bd8b3e3a2b4b?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=800&fit=max&ixid=eyJhcHBfaWQiOjE0NTg5fQ',\r\n  },\r\n  // {\r\n  //   title: 'Four',\r\n  //   subtitle: 'Australia',\r\n  //   description: 'A piece of heaven',\r\n  //   image:\r\n  //     'https://images.unsplash.com/flagged/photo-1564918031455-72f4e35ba7a6?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=800&fit=max&ixid=eyJhcHBfaWQiOjE0NTg5fQ',\r\n  // },\r\n  // {\r\n  //   title: 'Five',\r\n  //   subtitle: 'Australia',\r\n  //   description: 'A piece of heaven',\r\n  //   image:\r\n  //     'https://images.unsplash.com/photo-1579130781921-76e18892b57b?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=800&fit=max&ixid=eyJhcHBfaWQiOjE0NTg5fQ',\r\n  // },\r\n];\r\n\r\nfunction useTilt(active) {\r\n  const ref = React.useRef(null);\r\n\r\n  React.useEffect(() => {\r\n    if (!ref.current || !active) {\r\n      return;\r\n    }\r\n\r\n    const state = {\r\n      rect: undefined,\r\n      mouseX: undefined,\r\n      mouseY: undefined,\r\n    };\r\n\r\n    const el = ref.current;\r\n\r\n    const handleMouseMove = (e) => {\r\n      if (!el) {\r\n        return;\r\n      }\r\n      if (!state.rect) {\r\n        state.rect = el.getBoundingClientRect();\r\n      }\r\n      state.mouseX = e.clientX;\r\n      state.mouseY = e.clientY;\r\n      const px = (state.mouseX - state.rect.left) / state.rect.width;\r\n      const py = (state.mouseY - state.rect.top) / state.rect.height;\r\n\r\n      el.style.setProperty('--px', px);\r\n      el.style.setProperty('--py', py);\r\n    };\r\n\r\n    el.addEventListener('mousemove', handleMouseMove);\r\n\r\n    return () => {\r\n      el.removeEventListener('mousemove', handleMouseMove);\r\n    };\r\n  }, [active]);\r\n\r\n  return ref;\r\n}\r\n\r\nconst initialState = {\r\n  slideIndex: 0,\r\n};\r\n\r\nconst slidesReducer = (state, event) => {\r\n  if (event.type === 'NEXT') {\r\n    console.info('slidesReducer ---', state);\r\n    return {\r\n      ...state,\r\n      slideIndex: (state.slideIndex + 1) % slides.length,\r\n    };\r\n  }\r\n  if (event.type === 'PREV') {\r\n    return {\r\n      ...state,\r\n      slideIndex:\r\n        state.slideIndex === 0 ? slides.length - 1 : state.slideIndex - 1,\r\n    };\r\n  }\r\n};\r\n\r\nfunction Slide({ slide, offset }) {\r\n  const active = offset === 0 ? true : null;\r\n  const ref = useTilt(active);\r\n\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      className={s.slide}\r\n      data-active={active}\r\n      style={{\r\n        '--offset': offset,\r\n        '--dir': offset === 0 ? 0 : offset > 0 ? 1 : -1,\r\n      }}\r\n    >\r\n      <div\r\n        className={s.slideBackground}\r\n        style={{\r\n          backgroundImage: `url('${slide.image}')`,\r\n        }}\r\n      />\r\n      <div\r\n        className={s.slideContent}\r\n        style={{\r\n          backgroundImage: `url('${slide.image}')`,\r\n        }}\r\n      >\r\n        <div className={s.slideContentInner}>\r\n          <h2 className={s.slideTitle}>{slide.title}</h2>\r\n          <h3 className={s.slideSubtitle}>{slide.subtitle}</h3>\r\n          <p className={s.slideDescription}>{slide.description}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction PlanetPage() {\r\n  const [slidesState, setSlides] = useState(slides);\r\n  const [state, dispatch] = useReducer(slidesReducer, initialState);\r\n\r\n  const [planetId, setPlanetId] = useState(1);\r\n\r\n  const [planetData, setPlanetData] = useState(null);\r\n\r\n  const [stopAutoSlider, setStopAutoSlider] = useState(false);\r\n\r\n  const okResponseStatus = 200;\r\n\r\n  const onChange = useCallback((event) => {\r\n    const { value } = event.target;\r\n    setPlanetId(value);\r\n  }, []);\r\n\r\n  const submit = useCallback(async () => {\r\n    async function getPlanet(starPlanetId) {\r\n      const response = await fetch(\r\n        `https://swapi.dev/api/planets/${starPlanetId}`\r\n      );\r\n\r\n      const data = await response.json();\r\n      const imgData = `https://starwars-visualguide.com/assets/img/planets/${\r\n        Number(starPlanetId) + 1\r\n      }.jpg`;\r\n\r\n      const dataWithImg = {\r\n        ...data,\r\n        image: imgData,\r\n      };\r\n\r\n      console.info(dataWithImg);\r\n\r\n      setPlanetData(dataWithImg);\r\n    }\r\n\r\n    await getPlanet(planetId);\r\n  }, [planetId]);\r\n\r\n  const onClick = useCallback(\r\n    async (type) => {\r\n      if (type === 'NEXT') {\r\n        const s1 = await fetch(\r\n          `https://starwars-visualguide.com/assets/img/planets/${Number(\r\n            planetId\r\n          )}.jpg`\r\n        );\r\n        const s2 = await fetch(\r\n          `https://starwars-visualguide.com/assets/img/planets/${\r\n            Number(planetId) + 1\r\n          }.jpg`\r\n        );\r\n        const s3 = await fetch(\r\n          `https://starwars-visualguide.com/assets/img/planets/${\r\n            Number(planetId) + 2\r\n          }.jpg`\r\n        );\r\n\r\n        setSlides((prevState) => {\r\n          const newState = [...prevState];\r\n\r\n          newState[0] = {\r\n            ...prevState[0],\r\n            image: s1.status === okResponseStatus ? s1.url : slides[0].image,\r\n          };\r\n\r\n          newState[1] = {\r\n            ...prevState[1],\r\n            image: s2.status === okResponseStatus ? s2.url : slides[1].image,\r\n          };\r\n\r\n          newState[2] = {\r\n            ...prevState[2],\r\n            image: s3.status === okResponseStatus ? s3.url : slides[2].image,\r\n          };\r\n\r\n          return newState;\r\n        });\r\n        dispatch({ type: 'NEXT' });\r\n      } else {\r\n        const s1 = await fetch(\r\n          `https://starwars-visualguide.com/assets/img/planets/${\r\n            Number(planetId) - 2\r\n          }.jpg`\r\n        );\r\n        const s2 = await fetch(\r\n          `https://starwars-visualguide.com/assets/img/planets/${\r\n            Number(planetId) - 1\r\n          }.jpg`\r\n        );\r\n        const s3 = await fetch(\r\n          `https://starwars-visualguide.com/assets/img/planets/${Number(\r\n            planetId\r\n          )}.jpg`\r\n        );\r\n\r\n        setSlides((prevState) => {\r\n          const newState = [...prevState];\r\n\r\n          newState[0] = {\r\n            ...prevState[0],\r\n            image: s1.status === okResponseStatus ? s1.url : slides?.[0].image,\r\n          };\r\n\r\n          newState[1] = {\r\n            ...prevState[1],\r\n            image: s2.status === okResponseStatus ? s2.url : slides?.[1].image,\r\n          };\r\n\r\n          newState[2] = {\r\n            ...prevState[2],\r\n            image: s3.status === okResponseStatus ? s2.url : slides?.[2].image,\r\n          };\r\n\r\n          return newState;\r\n        });\r\n        dispatch({ type: 'PREV' });\r\n      }\r\n    },\r\n    [planetId]\r\n  );\r\n\r\n  // useEffect(() => {\r\n  //   // const nextSlide = dispatch === 'NEXT' ? slides + 1 : slides + 1;\r\n  //   // eslint-disable-next-line no-magic-numbers\r\n  //   const nextSlideInterval = setInterval(() => onClick('NEXT'), 5000);\r\n\r\n  //   return () => {\r\n  //     clearInterval(nextSlideInterval);\r\n  //   };\r\n  // }, [onClick, slidesState]);\r\n\r\n  const runSliderInterval = useCallback(\r\n    () => setInterval(() => onClick('PREV'), 5000),\r\n    [onClick]\r\n  );\r\n\r\n  useEffect(() => {\r\n    const interval = runSliderInterval();\r\n\r\n    if (stopAutoSlider) {\r\n      clearInterval(interval);\r\n    }\r\n\r\n    return () => clearInterval(interval);\r\n  }, [runSliderInterval, stopAutoSlider]);\r\n\r\n  const changeAutoSlider = useCallback(() => {\r\n    setStopAutoSlider(!stopAutoSlider);\r\n  }, [stopAutoSlider]);\r\n\r\n  // const offStopAutoSlider = useCallback(() => {\r\n  //   setStopAutoSlider(false);\r\n  // }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className={s.container}>\r\n        <div className={s.searchPlanetRoot}>\r\n          <div className={s.sPHeroIsRoot}>\r\n            <Link className={s.sPLink} to=\"/\">\r\n              Back\r\n            </Link>\r\n            <input\r\n              className={s.sPSearching}\r\n              name=\"setHero\"\r\n              onChange={onChange}\r\n              type=\"number\"\r\n              placeholder=\"Search\"\r\n              value={planetId}\r\n            />\r\n            <button className={s.sPSubmitButton} onClick={submit}>\r\n              Show\r\n            </button>\r\n          </div>\r\n          <button className={s.sPAutoSliderButton} onClick={changeAutoSlider}>\r\n            {stopAutoSlider ? 'onAuto' : 'stopAuto'}\r\n          </button>\r\n          {/* <button onClick={offStopAutoSlider}></button> */}\r\n          {planetData && (\r\n            <div className={s.sPlanetsDescriptionAndImg}>\r\n              <div className={s.sPImage}>\r\n                <img src={planetData?.image} alt=\"Planet Image\" />\r\n              </div>\r\n              <div className={s.sPDescriptionContainer}>\r\n                <span className={s.sPName}>{planetData?.name}</span>\r\n                <div className={s.sPDescription}>\r\n                  <span className={s.sPDetails}>Description</span>\r\n                  <span className={s.sPRotationPeriod}>\r\n                    RotationPeriod: {planetData?.rotation_period}\r\n                  </span>\r\n                  <span className={s.sPResidents}>\r\n                    Residents: {planetData?.residents}\r\n                  </span>\r\n                  <span className={s.sPOrbitalPeriod}>\r\n                    OrbitalPeriod: {planetData?.orbital_period}\r\n                  </span>\r\n                  <span className={s.sPDiameter}>\r\n                    Diameter: {planetData?.diameter}\r\n                  </span>\r\n                  <span className={s.sPClimate}>\r\n                    Climate: {planetData?.climate}\r\n                  </span>\r\n                  <span className={s.sPGravity}>\r\n                    Gravity: {planetData?.gravity}\r\n                  </span>\r\n                  <span className={s.sPTerrain}>\r\n                    Terrain: {planetData?.terrain}\r\n                  </span>\r\n                  <span className={s.sPSurfaceWater}>\r\n                    SurfaceWater: {planetData?.surface_water}\r\n                  </span>\r\n                  <span className={s.sPPopulation}>\r\n                    Population: {planetData?.population}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className={s.rootSlides}>\r\n          <div className={s.slides}>\r\n            <button onClick={() => onClick('NEXT')}>‹</button>\r\n\r\n            {[...slidesState, ...slidesState, ...slidesState].map(\r\n              (slide, i) => {\r\n                const offset = slides.length + (state.slideIndex - i);\r\n                return <Slide slide={slide} offset={offset} key={i} />;\r\n              }\r\n            )}\r\n            <button onClick={() => onClick('PREV')}>›</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n\r\n  // return (\r\n  //   <div className={s.slides}>\r\n  //     <button onClick={() => dispatch({ type: 'PREV' })}>‹</button>\r\n\r\n  //     {[...slidesState, ...slidesState, ...slidesState].map((slide, i) => {\r\n  //       const offset = slides.length + (state.slideIndex - i);\r\n  //       return <Slide slide={slide} offset={offset} key={i} />;\r\n  //     })}\r\n  //     <button onClick={() => dispatch({ type: 'NEXT' })}>›</button>\r\n  //   </div>\r\n  // );\r\n}\r\n\r\n// function PlanetPage() {\r\n//   const initialState = {\r\n//     slideIndex: 0,\r\n//   };\r\n\r\n//   const slidesReducer = (state, event) => {\r\n//     if (event.type === 'NEXT') {\r\n//       return {\r\n//         ...state,\r\n//         slideIndex: (state.slideIndex + 1) % slides.length,\r\n//       };\r\n//     }\r\n//     if (event.type === 'PREV') {\r\n//       return {\r\n//         ...state,\r\n//         slideIndex:\r\n//           state.slideIndex === 0 ? slides.length - 1 : state.slideIndex - 1,\r\n//       };\r\n//     }\r\n//   };\r\n\r\n//   const [state, dispatch] = useReducer(slidesReducer, initialState);\r\n\r\n//   const [planetId, setPlanetId] = useState(1);\r\n\r\n//   const [planetData, setPlanetData] = useState(null);\r\n\r\n//   const onChange = useCallback((event) => {\r\n//     const { value } = event.target;\r\n//     setPlanetId(value);\r\n//   }, []);\r\n\r\n//   const submit = useCallback(() => {\r\n//     async function getPlanet(starPlanetId) {\r\n//       const response = await fetch(\r\n//         `https://swapi.dev/api/planets/${starPlanetId}`\r\n//       );\r\n\r\n//       const data = await response.json();\r\n//       const imgData = `https://starwars-visualguide.com/assets/img/planets/${Number(starPlanetId) + 1}.jpg`;\r\n\r\n//       const dataWithImg = {\r\n//         ...data,\r\n//         image: imgData,\r\n//       };\r\n\r\n//       console.info(dataWithImg);\r\n\r\n//       setPlanetData(dataWithImg);\r\n//     }\r\n\r\n//     getPlanet(planetId);\r\n//   }, [planetId]);\r\n\r\n//   return (\r\n//     <div>\r\n//       <div className=\"s-p-heroIsRoot\">\r\n//         <Link className=\"s-p-link\" to=\"/\">\r\n//           Back\r\n//         </Link>\r\n//         <input\r\n//           className=\"s-p-searching\"\r\n//           name=\"setHero\"\r\n//           onChange={onChange}\r\n//           type=\"number\"\r\n//           placeholder=\"Search\"\r\n//           value={planetId}\r\n//         />\r\n//         <button className=\"s-p-submitButton\" onClick={submit}>\r\n//           Show\r\n//         </button>\r\n//       </div>\r\n//       {planetData && (\r\n//         <div className=\"s-p-descriptionAndImg\">\r\n//           <div className=\"s-p-image\">\r\n//             <img src={planetData?.image} alt=\"Planet Image\" />\r\n//           </div>\r\n//           <div className=\"s-p-descriptionContainer\">\r\n//             <span className=\"s-p-name\">{planetData?.name}</span>\r\n//             <div className=\"s-p-description\">\r\n//               <span className=\"s-p-details\">Description</span>\r\n//               <span className=\"s-p-rotationPeriod\">\r\n//                 RotationPeriod: {planetData?.rotation_period}\r\n//               </span>\r\n//               <span className=\"s-p-residents\">\r\n//                 Residents: {planetData?.residents}\r\n//               </span>\r\n//               <span className=\"s-p-orbitalPeriod\">\r\n//                 OrbitalPeriod: {planetData?.orbital_period}\r\n//               </span>\r\n//               <span className=\"s-p-diameter\">\r\n//                 Diameter: {planetData?.diameter}\r\n//               </span>\r\n//               <span className=\"s-p-climate\">\r\n//                 Climate: {planetData?.climate}\r\n//               </span>\r\n//               <span className=\"s-p-gravity\">\r\n//                 Gravity: {planetData?.gravity}\r\n//               </span>\r\n//               <span className=\"s-p-terrain\">\r\n//                 Terrain: {planetData?.terrain}\r\n//               </span>\r\n//               <span className=\"s-p-surfaceWater\">\r\n//                 SurfaceWater: {planetData?.surface_water}\r\n//               </span>\r\n//               <span className=\"s-p-population\">\r\n//                 Population: {planetData?.population}\r\n//               </span>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//       <div className=\"slides\">\r\n//         <button onClick={() => dispatch({ type: 'PREV' })}>‹</button>\r\n\r\n//         {[...slides, ...slides, ...slides].map((slide, i) => {\r\n//           const offset = slides.length + (state.slideIndex - i);\r\n//           return <Slide slide={slide} offset={offset} key={i} />;\r\n//         })}\r\n//         <button onClick={() => dispatch({ type: 'NEXT' })}>›</button>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\nexport default PlanetPage;\r\n","C:\\ArtemStudy\\Trello\\artem-react-app\\src\\pages\\testInMay\\testInMay.js",[],"C:\\ArtemStudy\\Trello\\artem-react-app\\src\\pages\\testInJune\\testInJune.js",[],"C:\\ArtemStudy\\Trello\\artem-react-app\\src\\pages\\testInApril\\testinApril.js",["141","142","143","144","145","146","147","148","149","150"],"import React, { useCallback, useState, useMemo, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './testInApril.css';\r\n\r\nfunction TestInApril() {\r\n  const [date, setDate] = useState(null);\r\n\r\n  const setNewDate = useCallback(() => {\r\n    console.info('SetData');\r\n\r\n    setDate(\r\n      `${new Date().getHours()}:${new Date().getMinutes()}:${new Date().getSeconds()}`\r\n    );\r\n  }, []);\r\n\r\n  const startTimer = useCallback(() => {\r\n    console.info('startTimer');\r\n    setInterval(setNewDate, 1000);\r\n  }, [setNewDate]);\r\n\r\n  useEffect(() => {\r\n    // if (!date) {\r\n    setTimeout(startTimer, 2000);\r\n    // }\r\n\r\n    // return () => {\r\n    //   clearTimeout(startTimer);\r\n    //   clearInterval(startTimer);\r\n    //   setDate(null);\r\n    // };\r\n  }, [startTimer]);\r\n\r\n  function call(a) {\r\n    return function (b) {\r\n      if (typeof a === 'string' && typeof b === 'string') {\r\n        return a + b;\r\n      }\r\n      if (typeof a === 'number' && typeof b === 'number') {\r\n        return a + b;\r\n      }\r\n      if (a === b) {\r\n        return a * b;\r\n      }\r\n      return true;\r\n    };\r\n  }\r\n\r\n  const showCallResults = useCallback(() => {\r\n    const callResult = call('I am ');\r\n\r\n    console.info('callResult -', callResult);\r\n\r\n    const result = callResult('babun');\r\n\r\n    console.info('result -', result);\r\n  });\r\n\r\n  // function showCallResults() {\r\n  //    const\r\n  // }\r\n\r\n  function doSometing(name) {\r\n    return `Hello, ${name}`;\r\n  }\r\n\r\n  function loggingDecorator(wrapped) {\r\n    console.info('Wrapped result');\r\n    wrapped.apply(this);\r\n    return wrapped;\r\n  }\r\n\r\n  const doSometingWithLogging = loggingDecorator(doSometing);\r\n\r\n  const wrappedResult = useCallback(() => {\r\n    console.info('Start');\r\n    console.info(doSometingWithLogging('Graham'));\r\n    console.info('Finish');\r\n  });\r\n\r\n  const dateToDisplay = useMemo(() => {\r\n    console.info('dateToDisplay - ', date);\r\n    return date;\r\n  }, [date]);\r\n\r\n  const userData = useMemo(() => {\r\n    console.info('ghfhgf');\r\n    return {\r\n      firstName: 'Artem',\r\n    };\r\n  }, []);\r\n  const clozuar = useCallback(() => {\r\n    function a(obgect) {\r\n      if (obgect?.firstName) {\r\n        return function () {\r\n          console.info(`${obgect?.firstNme} ${obgect?.lastName}`);\r\n        };\r\n      }\r\n      return false;\r\n    }\r\n\r\n    const fullName = a(userData);\r\n\r\n    fullName('Brozzzz');\r\n\r\n    // console.info('Result - ', results)\r\n  }, [userData]);\r\n\r\n  return (\r\n    <div>\r\n      <Link to=\"/\">Back</Link>\r\n\r\n      {dateToDisplay}\r\n\r\n      <button onClick={showCallResults}>Call</button>\r\n      <button onClick={clozuar}>FullName</button>\r\n      <button onClick={wrappedResult}>Logging Name</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TestInApril;\r\n","C:\\ArtemStudy\\Trello\\artem-react-app\\src\\pages\\threePage\\threePage.js",[],"C:\\ArtemStudy\\Trello\\artem-react-app\\src\\pages\\calculation\\calculation.js",["151","152","153"],"import React, { useCallback, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './calculation.css';\r\n\r\nfunction Calculation() {\r\n  const [count, setCount] = useState(0);\r\n\r\n  const values = {\r\n    valueText1: '',\r\n    method1() {\r\n      return this.valueText1 + this.valueText2;\r\n    },\r\n    valueText2: 0,\r\n    valueText3: '',\r\n    dataToDisplay: null,\r\n  };\r\n\r\n  const initialState = {\r\n    uname: '',\r\n    value1: 0,\r\n    value2: 0,\r\n    value3: 0,\r\n    dataToDisplay: null,\r\n  };\r\n\r\n  const [dataState, setDataState] = useState(initialState);\r\n  const [isUserSubmit, setisUserSubmit] = useState(false);\r\n  const [newState, setNewState] = useState(values);\r\n\r\n  const onChangeData = useCallback((event) => {\r\n    console.info(event);\r\n\r\n    // event.target\r\n    const { target } = event;\r\n\r\n    const { name, value } = target;\r\n\r\n    setDataState((prevState) => {\r\n      console.info(\r\n        'prevState - ',\r\n        prevState,\r\n        'name of property - ',\r\n        name,\r\n        'new value - ',\r\n        value\r\n      );\r\n      const changedState = {\r\n        ...prevState,\r\n        [name]: value,\r\n      };\r\n\r\n      return changedState;\r\n    });\r\n    return null;\r\n  }, []);\r\n\r\n  const submit = useCallback(() => {\r\n    console.info(dataState);\r\n    if (\r\n      dataState.uname &&\r\n      dataState.value1 &&\r\n      dataState.value2 &&\r\n      dataState.value3\r\n    ) {\r\n      const valuesSum =\r\n        parseInt(dataState.value1) +\r\n        parseInt(dataState.value2) +\r\n        parseInt(dataState.value3);\r\n\r\n      setDataState((prevState) => ({\r\n        ...prevState,\r\n        dataToDisplay: `${dataState.uname} fill data ${valuesSum}`,\r\n      }));\r\n      setisUserSubmit(true);\r\n    } else {\r\n      alert('All fields must be filled!');\r\n    }\r\n  });\r\n\r\n  const clearData = useCallback(() => {\r\n    setisUserSubmit(false);\r\n    setDataState(initialState);\r\n    setCount(0);\r\n  }, [initialState]);\r\n\r\n  const increseCount = useCallback(() => {\r\n    setCount(count + 1);\r\n  }, [count]);\r\n\r\n  const submits = useCallback(() => {\r\n    console.info(newState);\r\n    let valuesSum;\r\n    if (newState.valueText1 && newState.valueText2 && newState.valueText3) {\r\n      valuesSum = `${newState.valueText1} ${newState.valueText2} ${newState.valueText3}`;\r\n      console.info(\r\n        'v1-',\r\n        newState.valueText1,\r\n        'v2-',\r\n        newState.valueText2,\r\n        'v3-',\r\n        newState.valueText3,\r\n        'valuesSum-',\r\n        valuesSum\r\n      );\r\n    }\r\n\r\n    console.info(valuesSum);\r\n    setNewState((prevState) => ({\r\n      ...prevState,\r\n      dataToDisplay: valuesSum,\r\n    }));\r\n  }, [newState]);\r\n\r\n  const onChangeValue = useCallback((event) => {\r\n    console.info(event);\r\n\r\n    const { name, value } = event.target;\r\n\r\n    setNewState((prevState) => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"calculationRoot\">\r\n      <Link to=\"/\">Back</Link>\r\n      <div className=\"calculationContainer\">\r\n        <div className=\"leftContainer\">\r\n          <label htmlFor=\"uname\">\r\n            <b>Username</b>\r\n          </label>\r\n          <input\r\n            className=\"values\"\r\n            type=\"text\"\r\n            placeholder=\"Enter Username\"\r\n            name=\"uname\"\r\n            required\r\n            onChange={onChangeData}\r\n            value={dataState?.uname}\r\n          />\r\n          <label htmlFor=\"value1\">\r\n            <b>Value1</b>\r\n          </label>\r\n          <input\r\n            className=\"values\"\r\n            type=\"number\"\r\n            placeholder=\"Value1\"\r\n            name=\"value1\"\r\n            required\r\n            onChange={onChangeData}\r\n          />\r\n          <label htmlFor=\"value2\">\r\n            <b>Value2</b>\r\n          </label>\r\n          <input\r\n            className=\"values\"\r\n            type=\"number\"\r\n            placeholder=\"Value2\"\r\n            name=\"value2\"\r\n            required\r\n            onChange={onChangeData}\r\n          />\r\n          <label htmlFor=\"value3\">\r\n            <b>Value3</b>\r\n          </label>\r\n          <input\r\n            className=\"values\"\r\n            type=\"number\"\r\n            placeholder=\"Value3\"\r\n            name=\"value3\"\r\n            required\r\n            onChange={onChangeData}\r\n          />\r\n\r\n          <button className=\"calculationButtons\" onClick={submit}>\r\n            Submit\r\n          </button>\r\n\r\n          <button className=\"calculationButtons\" onClick={clearData}>\r\n            Clear\r\n          </button>\r\n\r\n          <button className=\"calculationButtons\" onClick={increseCount}>\r\n            Counter+\r\n          </button>\r\n\r\n          <span>{count}</span>\r\n\r\n          {isUserSubmit && <div>{dataState.dataToDisplay}</div>}\r\n        </div>\r\n\r\n        <div className=\"rightContainer\">\r\n          <input\r\n            className=\"values\"\r\n            name=\"valueText1\"\r\n            value={dataState?.valueText1}\r\n            type=\"text\"\r\n            placeholder=\"valueText1\"\r\n            onChange={onChangeValue}\r\n          />\r\n          <input\r\n            className=\"values\"\r\n            name=\"valueText2\"\r\n            type=\"number\"\r\n            placeholder=\"valueText2\"\r\n            onChange={onChangeValue}\r\n          />\r\n          <input\r\n            className=\"values\"\r\n            name=\"valueText3\"\r\n            type=\"text\"\r\n            placeholder=\"valueText3\"\r\n            onChange={onChangeValue}\r\n          />\r\n\r\n          <button onClick={submits}>Submit</button>\r\n\r\n          <span>{newState.dataToDisplay}</span>\r\n        </div>\r\n      </div>\r\n      {/* <div className=\"container\">\r\n        <label for=\"uname\">\r\n          <b>Username</b>\r\n        </label>\r\n        <input type=\"text\" placeholder=\"Enter Username\" name=\"uname\" required />\r\n\r\n        <label for=\"psw\">\r\n          <b>Password</b>\r\n        </label>\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Enter Password\"\r\n          name=\"psw\"\r\n          required\r\n        />\r\n\r\n        <button type=\"submit\">Login</button>\r\n        <label>\r\n          <input type=\"checkbox\" checked=\"checked\" name=\"remember\" /> Remember\r\n          me\r\n        </label>\r\n      </div> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Calculation;\r\n","C:\\ArtemStudy\\Trello\\artem-react-app\\src\\utils\\helpers.js",[],"C:\\ArtemStudy\\Trello\\artem-react-app\\src\\components\\Banner\\Banner.js",[],"C:\\ArtemStudy\\Trello\\artem-react-app\\src\\components\\ContactAs\\ContactAs.js",[],"C:\\ArtemStudy\\Trello\\artem-react-app\\src\\components\\BigButton\\BigButton.js",[],"C:\\ArtemStudy\\Trello\\artem-react-app\\src\\components\\Header\\Header.js",[],"C:\\ArtemStudy\\Trello\\artem-react-app\\src\\components\\AboutUs\\AboutUs.js",[],"C:\\ArtemStudy\\Trello\\artem-react-app\\src\\pages\\toDoList\\toDoList.js",["154","155","156","157","158","159"],{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","severity":1,"message":"171","line":58,"column":41,"nodeType":"172","endLine":58,"endColumn":65},{"ruleId":"170","severity":1,"message":"173","line":60,"column":43,"nodeType":"172","endLine":60,"endColumn":69},{"ruleId":"170","severity":1,"message":"174","line":64,"column":20,"nodeType":"172","endLine":64,"endColumn":70},{"ruleId":"170","severity":1,"message":"175","line":68,"column":21,"nodeType":"172","endLine":68,"endColumn":67},{"ruleId":"170","severity":1,"message":"176","line":72,"column":22,"nodeType":"172","endLine":79,"endColumn":7},{"ruleId":"170","severity":1,"message":"177","line":83,"column":5,"nodeType":"172","endLine":83,"endColumn":47},{"ruleId":"178","severity":1,"message":"179","line":83,"column":29,"nodeType":"172","messageId":"180","endLine":83,"endColumn":46},{"ruleId":"170","severity":1,"message":"176","line":88,"column":22,"nodeType":"172","endLine":96,"endColumn":7},{"ruleId":"170","severity":1,"message":"177","line":98,"column":5,"nodeType":"172","endLine":98,"endColumn":61},{"ruleId":"170","severity":1,"message":"176","line":104,"column":25,"nodeType":"172","endLine":115,"endColumn":7},{"ruleId":"178","severity":1,"message":"179","line":64,"column":14,"nodeType":"172","messageId":"180","endLine":64,"endColumn":76},{"ruleId":"178","severity":1,"message":"179","line":67,"column":14,"nodeType":"172","messageId":"180","endLine":67,"endColumn":76},{"ruleId":"181","severity":1,"message":"182","line":4,"column":3,"nodeType":"183","messageId":"184","endLine":4,"endColumn":9},{"ruleId":"185","severity":1,"message":"186","line":124,"column":18,"nodeType":"187","messageId":"188","endLine":124,"endColumn":56},{"ruleId":"189","severity":1,"message":"190","line":284,"column":46,"nodeType":"191","messageId":"192","endLine":284,"endColumn":50},{"ruleId":"170","severity":1,"message":"176","line":375,"column":14,"nodeType":"172","endLine":380,"endColumn":14},{"ruleId":"189","severity":1,"message":"193","line":19,"column":29,"nodeType":"191","messageId":"192","endLine":19,"endColumn":33},{"ruleId":"189","severity":1,"message":"194","line":24,"column":28,"nodeType":"191","messageId":"192","endLine":24,"endColumn":32},{"ruleId":"195","severity":1,"message":"196","line":35,"column":12,"nodeType":"197","messageId":"198","endLine":35,"endColumn":21},{"ruleId":"199","severity":1,"message":"200","line":36,"column":11,"nodeType":"201","endLine":36,"endColumn":32},{"ruleId":"199","severity":1,"message":"200","line":36,"column":36,"nodeType":"201","endLine":36,"endColumn":57},{"ruleId":"199","severity":1,"message":"202","line":39,"column":11,"nodeType":"201","endLine":39,"endColumn":32},{"ruleId":"199","severity":1,"message":"202","line":39,"column":36,"nodeType":"201","endLine":39,"endColumn":57},{"ruleId":"203","severity":1,"message":"204","line":49,"column":27,"nodeType":"183","endLine":49,"endColumn":38},{"ruleId":"203","severity":1,"message":"204","line":75,"column":25,"nodeType":"183","endLine":75,"endColumn":36},{"ruleId":"195","severity":1,"message":"196","line":95,"column":16,"nodeType":"197","messageId":"198","endLine":95,"endColumn":25},{"ruleId":"203","severity":1,"message":"205","line":19,"column":9,"nodeType":"206","endLine":25,"endColumn":4},{"ruleId":"203","severity":1,"message":"204","line":58,"column":18,"nodeType":"183","endLine":58,"endColumn":29},{"ruleId":"178","severity":1,"message":"179","line":77,"column":7,"nodeType":"172","messageId":"180","endLine":77,"endColumn":42},{"ruleId":"181","severity":1,"message":"207","line":1,"column":40,"nodeType":"183","messageId":"184","endLine":1,"endColumn":49},{"ruleId":"181","severity":1,"message":"208","line":2,"column":10,"nodeType":"183","messageId":"184","endLine":2,"endColumn":14},{"ruleId":"181","severity":1,"message":"209","line":31,"column":10,"nodeType":"183","messageId":"184","endLine":31,"endColumn":17},{"ruleId":"210","severity":1,"message":"211","line":32,"column":26,"nodeType":"183","messageId":"212","endLine":32,"endColumn":30},{"ruleId":"210","severity":1,"message":"211","line":33,"column":35,"nodeType":"183","messageId":"212","endLine":33,"endColumn":39},{"ruleId":"170","severity":1,"message":"176","line":48,"column":10,"nodeType":"172","endLine":50,"endColumn":11},"lines-around-directive",["213"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"lodash/prefer-lodash-method","Prefer '_.keys' over the native function.","CallExpression","Prefer '_.values' over the native function.","Prefer '_.find' over the native function.","Prefer '_.filter' over the native function.","Prefer '_.map' over the native function.","Prefer '_.forEach' over the native function.","no-alert","Unexpected alert.","unexpected","no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","no-nested-ternary","Do not nest ternary expressions.","ConditionalExpression","noNestedTernary","no-magic-numbers","No magic number: 5000.","Literal","noMagic","No magic number: 1000.","No magic number: 2000.","func-names","Unexpected unnamed function.","FunctionExpression","unnamed","lodash/prefer-lodash-typecheck","Prefer '_.isString' over 'typeof' comparison.","BinaryExpression","Prefer '_.isNumber' over 'typeof' comparison.","react-hooks/exhaustive-deps","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","The 'initialState' object makes the dependencies of useCallback Hook (at line 85) change on every render. To fix this, wrap the initialization of 'initialState' in its own useMemo() Hook.","VariableDeclarator","'useEffect' is defined but never used.","'Link' is defined but never used.","'onClick' is defined but never used.","no-undef","'item' is not defined.","undef","padding-line-between-statements"]