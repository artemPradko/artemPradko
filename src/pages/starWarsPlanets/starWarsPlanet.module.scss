.s-p-descriptionAndImg {
    display: flex ;
    background-color: black;
}

.s-p-descriptionContainer {
    padding-top: 10px;
}

.s-p-image {

}

.s-p-description {
    width: 100%;
    color: whitesmoke;
    display: grid;
    padding: 25px;
    
}

.s-p-description span {
    font-size: x-large;
    font-weight: 700;
    margin-left: 39px;
    font-family: inherit;
}

.s-p-details {
    font-size: xx-large !important;
    font-weight: 900 !important;
}

.s-p-name {
    color: whitesmoke;
    font-weight: 900;
    margin-left: 47px;
    font-size: xxx-large;
}

.s-p-submitButton {
    padding-top: 7px;
    padding-bottom: 7px;
    background-color: black;
    color: whitesmoke;
    border: 2px solid;
    border-color: whitesmoke;
    font-weight: 900;
    border-radius: 8px;
    margin-left: 10px;
}

.s-p-heroIsRoot {
    width: 100%;
    background: black;
}

.s-p-link {
    color: whitesmoke;
    font-weight: 700;
    border: 2px solid;
    border-color: whitesmoke;
    border-radius: 8px;
    padding-top: 4px;
    padding-bottom: 6px;
    padding-left: 3px;
    padding-right: 3px;
}

.s-p-rotationPeriod {

}

.s-p-orbitalPeriod {

}

.s-p-diameter {

}

.s-p-climate {

}

.s-p-gravity {

}

.s-p-terrain {

}

.s-p-surfaceWater {

}

.s-p-population {

}

.s-p-residents {
    
}

.s-p-searching {
    padding-top: 8px;
    padding-bottom: 8px;
    background-color: black;
    color: whitesmoke;
    border: 2px solid;
    border-color: whitesmoke;
    margin-left: 7px;
    font-weight: 700;
    border-radius: 8px;
    padding-left: 5px;
    width: 91%;
}

*,
*::before,
*::after {
  box-sizing: border-box;
  position: relative;
}

html,
body {
  height: 100%;
  width: 100%;
  margin: 0;
  padding: 0;
  font-size: 3vmin;
}

html {
  background: #151515;
  color: #fff;
  overflow: hidden;
}

body {
  display: flex;
  justify-content: center;
  align-items: center;
}

.slides {
  display: grid;
  > .slide {
    grid-area: 1 / -1;
  }

  > button {
    appearance: none;
    background: transparent;
    border: none;
    color: white;
    position: absolute;
    font-size: 5rem;
    width: 5rem;
    height: 5rem;
    top: 30%;
    transition: opacity 0.3s;
    opacity: 0.7;
    z-index: 5;

    &:hover {
      opacity: 1;
    }

    &:focus {
      outline: none;
    }

    &:first-child {
      left: -50%;
    }
    &:last-child {
      right: -50%;
    }
  }
}

.slide {
  //transform-style: preserve-3d;
  // border: solid 1px red;

  // &[data-active] {
  //   .slideContent > * {
  //     transform: none;
  //     opacity: 1;
  //   }
  // }
}

.slideContent {
  width: 30vw;
  height: 40vw;
  background-size: cover;
  background-position: center center;
  background-repeat: no-repeat;
  transition: transform 0.5s ease-in-out;
  opacity: 0.7;

  display: grid;
  align-content: center;

  transform-style: preserve-3d;
  transform: perspective(1000px) translateX(calc(100% * var(--offset)))
    rotateY(calc(-45deg * var(--dir)));
}

.slideContentInner {
  transform-style: preserve-3d;
  transform: translateZ(2rem);
  transition: opacity 0.3s linear;
  text-shadow: 0 0.1rem 1rem #000;
  opacity: 0;

  .slideSubtitle,
  .slideTitle {
    font-size: 2rem;
    font-weight: normal;
    letter-spacing: 0.2ch;
    text-transform: uppercase;
    margin: 0;
  }

  .slideSubtitle::before {
    content: "â€” ";
  }

  .slideDescription {
    margin: 0;
    font-size: 0.8rem;
    letter-spacing: 0.2ch;
  }
}

.slideBackground {
  position: fixed;
  top: 0;
  left: -10%;
  right: -10%;
  bottom: 0;
  background-size: cover;
  background-position: center center;
  z-index: -1;
  opacity: 0;
  transition: opacity 0.3s linear, transform 0.3s ease-in-out;
  pointer-events: none;

  transform: translateX(calc(10% * var(--dir)));
}

.slide[data-active] {
  z-index: 2;
  pointer-events: auto;

  .slideBackground {
    opacity: 0.2;
    transform: none;
  }

  .slideContentInner {
    opacity: 1;
  }

  .slideContent {
    --x: calc(var(--px) - 0.5);
    --y: calc(var(--py) - 0.5);
    opacity: 1;

    transform: perspective(1000px);

    &:hover {
      transition: none;
      transform: perspective(1000px) rotateY(calc(var(--x) * 45deg))
        rotateX(calc(var(--y) * -45deg));
    }
  }
}